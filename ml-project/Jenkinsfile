pipeline {
    agent any
    environment {
        appName = 'variable'
    }
    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image for training
                    sh "docker build -t my-model-api:latest ml-project/."
                }
            }
        }
        stage('Deploy FastAPI') {
            steps {
                script {
                    // Check if the container exists and conditionally handle the deployment
                    sh '''
                    if docker ps -a --format '{{.Names}}' | grep -q my-model-api-container; then
                        echo "Container exists. Removing and re-running..."
                        docker rm -f my-model-api-container; docker run --rm -d --name my-model-api-container -p 8000:8000 my-model-api
                    else
                        echo "Container does not exist. Running..."
                        docker run --rm -d --name my-model-api-container -p 8000:8000 my-model-api
                    fi
                    '''
                }
            }
        }
    }
    post {
        always {
            deleteDir()
            sh "echo 'Cleaning up workspace'"
        }
        success {
            sh "echo 'Deployment successful'"
        }
        failure {
            sh "echo 'Deployment failed'"
        }
    }
}
